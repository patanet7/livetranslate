# LiveTranslate Environment Configuration Template
# Copy this file to .env and configure the values for your environment

# ===========================================
# HARDWARE ACCELERATION SETTINGS
# ===========================================

# Hardware Detection (auto-detected by deploy.py, but can be overridden)
LIVETRANSLATE_NPU_ENABLED=auto
LIVETRANSLATE_GPU_ENABLED=auto
LIVETRANSLATE_CPU_FALLBACK=true

# OpenVINO Configuration for NPU
OPENVINO_DEVICE=AUTO
OPENVINO_LOG_LEVEL=INFO

# CUDA Configuration for GPU
NVIDIA_VISIBLE_DEVICES=all
CUDA_VISIBLE_DEVICES=all

# ===========================================
# LOCAL INFERENCE CONFIGURATION
# ===========================================

# Preferred inference backend (vllm, ollama, auto)
INFERENCE_BACKEND=auto

# vLLM Configuration
VLLM_BASE_URL=http://localhost:8000
VLLM_DEFAULT_MODEL=meta-llama/Llama-3.1-8B-Instruct
VLLM_API_KEY=

# Ollama Configuration
OLLAMA_BASE_URL=http://localhost:11434
OLLAMA_DEFAULT_MODEL=llama3.1:8b

# ===========================================
# EXTERNAL AI API KEYS (FALLBACK/OPTIONAL)
# ===========================================

# OpenAI API Key (for translation services fallback)
OPENAI_API_KEY=your_openai_api_key_here

# Azure OpenAI (alternative to OpenAI)
AZURE_OPENAI_API_KEY=your_azure_openai_key_here
AZURE_OPENAI_ENDPOINT=https://your-resource.openai.azure.com/

# Google API Key (for translation services fallback)
GOOGLE_API_KEY=your_google_api_key_here

# Anthropic Claude API Key (for translation services fallback)
ANTHROPIC_API_KEY=your_anthropic_api_key_here

# ===========================================
# SERVICE CONFIGURATION
# ===========================================

# Service Ports
WHISPER_NPU_PORT=8009
WHISPER_GPU_PORT=8011
WHISPER_CPU_PORT=8012
TRANSCRIPTION_PORT=8765
TRANSLATION_PORT=8010
LOGGING_PORT=8766
FRONTEND_PORT=8080
NGINX_PORT=80

# Internal Service URLs
WHISPER_SERVER_URL=http://whisper-npu-server:5000
TRANSLATION_SERVER_URL=http://translation-server:8010
LOGGING_SERVER_URL=http://logging-server:8766

# ===========================================
# AUDIO CONFIGURATION
# ===========================================

# Audio Capture Settings
AUDIO_SAMPLE_RATE=16000
AUDIO_CHANNELS=1
AUDIO_CHUNK_SIZE=1024
AUDIO_FORMAT=int16

# Audio Device Selection (auto-detect if not specified)
AUDIO_INPUT_DEVICE=auto
AUDIO_OUTPUT_DEVICE=auto

# ===========================================
# MODEL CONFIGURATION
# ===========================================

# Whisper Model Settings
WHISPER_MODEL=base
WHISPER_LANGUAGE=auto
WHISPER_TASK=transcribe

# Translation Model Settings
TRANSLATION_MODEL=Qwen/Qwen3-14B-AWQ
TRANSLATION_SOURCE_LANG=auto
TRANSLATION_TARGET_LANG=en

# Model Cache Paths
WHISPER_MODELS_PATH=${HOME}/.whisper/models
HUGGINGFACE_CACHE_PATH=${HOME}/.cache/huggingface

# ===========================================
# DATABASE CONFIGURATION
# ===========================================

# PostgreSQL Configuration
POSTGRES_HOST=postgres
POSTGRES_PORT=5432
POSTGRES_DB=livetranslate
POSTGRES_USER=livetranslate
POSTGRES_PASSWORD=your_postgres_password_here

# Redis Configuration
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_PASSWORD=your_redis_password_here

# ===========================================
# LOGGING CONFIGURATION
# ===========================================

# Application Logging
LOG_LEVEL=INFO
LOG_FORMAT=json
LOG_FILE_PATH=/var/log/app/livetranslate.log
LOG_MAX_SIZE=100MB
LOG_BACKUP_COUNT=3

# Docker Logging
DOCKER_LOG_DRIVER=json-file
DOCKER_LOG_MAX_SIZE=100m
DOCKER_LOG_MAX_FILE=3

# ===========================================
# SECURITY CONFIGURATION
# ===========================================

# JWT Configuration
JWT_SECRET_KEY=your_jwt_secret_key_here
JWT_ALGORITHM=HS256
JWT_EXPIRATION_HOURS=24

# CORS Settings
CORS_ORIGINS=http://localhost:8080,http://localhost:3000
CORS_METHODS=GET,POST,PUT,DELETE,OPTIONS
CORS_HEADERS=Content-Type,Authorization

# SSL/TLS Configuration
SSL_ENABLED=false
SSL_CERT_PATH=/etc/ssl/certs/livetranslate.crt
SSL_KEY_PATH=/etc/ssl/private/livetranslate.key

# ===========================================
# PERFORMANCE CONFIGURATION
# ===========================================

# Resource Limits
MAX_CONCURRENT_REQUESTS=10
WORKER_PROCESSES=auto
WORKER_CONNECTIONS=1000

# Cache Settings
CACHE_TTL_SECONDS=3600
CACHE_MAX_SIZE=1000

# ===========================================
# MONITORING CONFIGURATION
# ===========================================

# Prometheus Configuration
PROMETHEUS_PORT=9090
PROMETHEUS_RETENTION_TIME=15d

# Grafana Configuration
GRAFANA_PORT=3000
GRAFANA_ADMIN_USER=admin
GRAFANA_ADMIN_PASSWORD=your_grafana_password_here

# Health Check Configuration
HEALTH_CHECK_INTERVAL=30s
HEALTH_CHECK_TIMEOUT=10s
HEALTH_CHECK_RETRIES=3

# ===========================================
# DEVELOPMENT CONFIGURATION
# ===========================================

# Environment Mode
ENVIRONMENT=development
DEBUG=false
FLASK_ENV=production

# Development Ports (alternative ports for dev)
DEV_FRONTEND_PORT=3000
DEV_API_PORT=8001

# Hot Reload Settings
ENABLE_HOT_RELOAD=false
WATCH_FILES=true

# ===========================================
# DOCKER CONFIGURATION
# ===========================================

# User Configuration (for security)
UID=1000
GID=1000

# Docker Compose Profiles
COMPOSE_PROFILES=auto

# Docker Network Configuration
DOCKER_NETWORK_SUBNET_FRONTEND=172.20.1.0/24
DOCKER_NETWORK_SUBNET_BACKEND=172.20.2.0/24
DOCKER_NETWORK_SUBNET_DATA=172.20.3.0/24
DOCKER_NETWORK_SUBNET_MONITORING=172.20.4.0/24 