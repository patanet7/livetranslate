# Start with a clean Ubuntu base for NPU support
FROM ubuntu:22.04

# Install system dependencies
RUN apt-get update && apt-get install -y \
    python3 \
    python3-pip \
    python3-dev \
    wget \
    curl \
    build-essential \
    cmake \
    pkg-config \
    libssl-dev \
    libffi-dev \
    git \
    && rm -rf /var/lib/apt/lists/*

# Create symbolic link for python
RUN ln -sf /usr/bin/python3 /usr/bin/python

# Download and install libtbb12 and dependencies (required for OpenVINO)
RUN cd /tmp && \
    wget http://ftp.us.debian.org/debian/pool/main/o/onetbb/libtbb12_2021.8.0-2_amd64.deb && \
    wget http://ftp.us.debian.org/debian/pool/main/o/onetbb/libtbbbind-2-5_2021.8.0-2_amd64.deb && \
    wget http://ftp.us.debian.org/debian/pool/main/o/onetbb/libtbbmalloc2_2021.8.0-2_amd64.deb && \
    wget http://ftp.us.debian.org/debian/pool/main/h/hwloc/libhwloc15_2.9.0-1_amd64.deb && \
    dpkg -i *.deb || apt-get install -f -y && \
    dpkg -i *.deb && \

    rm -f *.deb

# Download and install Intel NPU drivers
ARG NPU_DRIVER_VERSION=v1.13.0
RUN cd /tmp && \
    wget https://github.com/intel/linux-npu-driver/releases/download/${NPU_DRIVER_VERSION}/intel-driver-compiler-npu_1.13.0.20250131-13074932693_ubuntu22.04_amd64.deb && \
    wget https://github.com/intel/linux-npu-driver/releases/download/${NPU_DRIVER_VERSION}/intel-level-zero-npu_1.13.0.20250131-13074932693_ubuntu22.04_amd64.deb && \
    wget https://github.com/oneapi-src/level-zero/releases/download/v1.18.5/level-zero_1.18.5+u22.04_amd64.deb && \
    dpkg -i *.deb || apt-get install -f -y && \
    dpkg -i *.deb && \
    rm -f *.deb

# Install Python packages with compatible versions
RUN pip3 install --upgrade pip

# Copy requirements and install Python dependencies
WORKDIR /app
COPY requirements.txt .
RUN pip3 install -r requirements.txt

# Copy the whisper service source code
COPY src/ ./src/

# Verify NPU support is available
RUN python3 -c "import openvino as ov; core = ov.Core(); print('Available devices:', core.available_devices)"

# Models will be mounted from user's home directory
VOLUME /root/.whisper/models

# Create session data directory
RUN mkdir -p /app/session_data

# Set environment variables for NPU optimization
ENV OPENVINO_DEVICE=NPU
ENV WHISPER_PORT=5001
ENV WHISPER_HOST=0.0.0.0
ENV PYTHONPATH=/app/src

EXPOSE 5001

# Use the comprehensive API server instead of simple server
CMD ["python3", "src/api_server.py"] 