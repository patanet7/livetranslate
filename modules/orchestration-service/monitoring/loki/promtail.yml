server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  # === DOCKER CONTAINER LOGS ===
  - job_name: docker-containers
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
        filters:
          - name: label
            values: ["logging=promtail"]
    relabel_configs:
      - source_labels: ['__meta_docker_container_name']
        regex: '/(.*)' 
        target_label: 'container_name'
      - source_labels: ['__meta_docker_container_log_stream']
        target_label: 'logstream'
      - source_labels: ['__meta_docker_container_label_logging']
        target_label: 'logging'
    pipeline_stages:
      - json:
          expressions:
            level: level
            timestamp: time
            message: msg
      - labels:
          level:
          container_name:
      - timestamp:
          source: timestamp
          format: RFC3339Nano
      - output:
          source: message

  # === ORCHESTRATION SERVICE LOGS ===
  - job_name: orchestration-service
    static_configs:
      - targets:
          - localhost
        labels:
          job: orchestration-service
          service: orchestration
          __path__: /app/logs/orchestration-service*.log
    pipeline_stages:
      - json:
          expressions:
            level: level
            timestamp: timestamp
            service: service
            message: message
            request_id: request_id
            component: component
            session_id: session_id
      - labels:
          level:
          service:
          component:
          session_id:
      - timestamp:
          source: timestamp
          format: RFC3339
      - output:
          source: message

  # === AUDIO SERVICE LOGS ===
  - job_name: audio-service
    static_configs:
      - targets:
          - localhost
        labels:
          job: audio-service
          service: audio
          __path__: /app/logs/audio-service*.log
    pipeline_stages:
      - json:
          expressions:
            level: level
            timestamp: timestamp
            service: service
            message: message
            session_id: session_id
            processing_time: processing_time
            model: model
            device: device
      - labels:
          level:
          service:
          session_id:
          model:
          device:
      - timestamp:
          source: timestamp
          format: RFC3339
      - output:
          source: message

  # === TRANSLATION SERVICE LOGS ===
  - job_name: translation-service
    static_configs:
      - targets:
          - localhost
        labels:
          job: translation-service
          service: translation
          __path__: /app/logs/translation-service*.log
    pipeline_stages:
      - json:
          expressions:
            level: level
            timestamp: timestamp
            service: service
            message: message
            request_id: request_id
            duration: duration
      - labels:
          level:
          service:
          request_id:
      - timestamp:
          source: timestamp
          format: RFC3339
      - output:
          source: message


  # === SYSTEM LOGS ===
  - job_name: system-logs
    static_configs:
      - targets:
          - localhost
        labels:
          job: system-logs
          __path__: /var/log/*.log
    pipeline_stages:
      - match:
          selector: '{job="system-logs"}'
          stages:
            - regex:
                expression: '^(?P<timestamp>\w{3} \d{1,2} \d{2}:\d{2}:\d{2}) (?P<hostname>\S+) (?P<service>\S+): (?P<message>.*)'
            - labels:
                hostname:
                service:
            - timestamp:
                source: timestamp
                format: 'Jan 02 15:04:05'
            - output:
                source: message

  # === DOCKER DAEMON LOGS ===
  - job_name: docker-daemon
    static_configs:
      - targets:
          - localhost
        labels:
          job: docker-daemon
          __path__: /var/log/docker.log
    pipeline_stages:
      - json:
          expressions:
            level: level
            timestamp: time
            message: msg
      - labels:
          level:
      - timestamp:
          source: timestamp
          format: RFC3339Nano
      - output:
          source: message

# === GLOBAL CONFIGURATION ===
limits_config:
  readline_rate: 10000
  readline_burst: 20000 